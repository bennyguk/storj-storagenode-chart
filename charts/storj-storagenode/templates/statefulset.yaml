apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "storj-storagenode.fullname" . }}
  labels:
    {{- include "storj-storagenode.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "storj-storagenode.fullname" . }}
  selector:
    matchLabels:
      {{- include "storj-storagenode.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "storj-storagenode.selectorLabels" . | nindent 8 }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "storj-storagenode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-storj-setup
          targetContainerName: {{ .Chart.Name }}
          {{- with .Values.storagenode }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ .image.repository }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- end }}
          volumeMounts:
            - name: {{ include "storj-storagenode.fullname" . }}
              mountPath: /app/config
            - name: storj-identity
              mountPath: /app/identity
          env:
            - name: SETUP
              value: "true"
          command: ["/bin/sh","-c"]
          args: ["/entrypoint; exit 0"]
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.storagenode }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ .image.repository }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- end }}
          {{- with .Values.service }}
          ports:
            - name: storagenode
              containerPort: {{ .storagenode.port }}
              protocol: TCP
            {{- if .stats.enabled }}
            - name: stats
              containerPort: {{ .stats.port }}
              protocol: TCP
            {{- end }}
            {{- if .quic.enabled }}
            - name: quic
              containerPort: {{ .storagenode.port }}
              protocol: UDP
            {{- end }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: storagenode
          readinessProbe:
            tcpSocket:
              port: storagenode
          envFrom:
            - configMapRef:
                name: {{ include "storj-storagenode.fullname" . }}
          resources:
            {{- toYaml .Values.storagenode.resources | nindent 12 }}
          volumeMounts:
            - name: {{ include "storj-storagenode.fullname" . }}
              mountPath: /app/config
            - name: storj-identity
              mountPath: /app/identity
          env:
            {{- with .Values.storagenode }}
            - name: LOG_LEVEL
              value: {{ .loggingLevel }}
            {{- end }}
            {{- with .Values.service.storagenode }}
            - name: SNO_RUN_PARAMS
              value: {{ $publicPort := print "--server.address=:" .port }}{{ $publicPort }}
            {{- end }}
            {{- with .Values.storagenode.updater }}
            - name: RUN_PARAMS
              value: {{ $loggingLevel := print "--log.level=" .loggingLevel }}{{ $loggingLevel }}
            {{- end }}
        {{- if .Values.metrics.enabled }}
        {{- with .Values.metrics }}
        - name: storj-exporter
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ .image.repository }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            - name: storj-exporter
              containerPort: {{ .port }}
              protocol: TCP
          env:
            - name: STORJ_HOST_ADDRESS
              value: "127.0.0.1"
          livenessProbe:
            timeoutSeconds: 2
            httpGet:
              path: /metrics
              port: storj-exporter
          readinessProbe:
            timeoutSeconds: 2
            httpGet:
              path: /metrics
              port: storj-exporter
          resources:
            {{- toYaml .resources | nindent 12 }}
        {{- end }}
        {{- end }}
      volumes:
        - name: storj-identity
          secret:
            secretName: {{ required "External secret identity" .Values.identity.externalSecret.secretName }}
        {{- if not .Values.persistence.enabled }}
        - name: {{ include "storj-storagenode.fullname" . }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "storj-storagenode.fullname" . }}
    {{- with .Values.persistence  }}
      annotations:
{{ toYaml .annotations | indent 8 }}
    spec:
{{ toYaml .volumeClaimTemplate | indent 6 }}
    {{- end }}
  {{- end }}
